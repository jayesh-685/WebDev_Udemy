But the idea here of Ajax, even though we're not talking about XML, the whole concept is creating

applications where using JavaScript we can load data or we can fetch information, or we can send data

somewhere to save your progress, save something to a database, do all sorts of things behind the scenes

where in the past you would have had to refresh a page to send a new request.

We can do it with JavaScript while you're on the same page.

Like loading new info as you scroll, or live search where you display results as you are typing



// Json

JSON is just a format for sending data for serializing or for sending information from me to you or

from an API to my browser or whatever it is.

It's a way of formatting data that is consistent and predictable, and it's very similar to JavaScript.

It's based upon JavaScript objects in the syntax, right, where we have key value pairs and curly braces,


// query strings

The QueryString collection is used to retrieve the variable values in the HTTP query string.

The HTTP query string is specified by the values following the question mark (?), like this:

<a href= "test.asp?txt=this is a query string test">Link with a query string</a>

The line above generates a variable named txt with the value "this is a query string test".

Query strings are also generated by form submission, or by a user typing a query into the address bar of the browser.



// http header

An HTTP header is a field of an HTTP request or response that passes additional context and metadata about the request or response. For example, a request message can use headers to indicate it's preferred media formats, while a response can use header to indicate the media format of the returned body. Headers are case-insensitive, begin at the start of a line and are immediately followed by a ':' and a header-dependent value. The value finishes at the next CRLF or at the end of the message.

The HTTP and Fetch specifications refer to a number of header categories, including:

Request header: Headers containing more information about the resource to be fetched or about the client itself.
Response header: Headers with additional information about the response, like its location or about the server itself (name, version, â€¦).
Representation header: metadata about the resource in the message body (e.g. encoding, media type, etc.).
Fetch metadata request header: Headers with metadata about the resource in the message body (e.g. encoding, media type, etc.).



// axios

need to import it since it's a third party libraray and not native to js
it uses fetch behind the scenes